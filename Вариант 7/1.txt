#include <iostream>
using namespace std;
int proizvedenie(int* arr);
int sredArifm(int** mas, const int n, const int m);
int main()
{/*1. Создать одномерный массив, содержащий 15 элементов, наполнить его случайными значениями 
 в интервале от 1 до 200. Определить произведение элементов массива с индексами от 2 и 7.*/
	setlocale(LC_ALL,"ru");
	int arr[15],result;
	for (int i = 0; i < 15; i++)
	{
		arr[i] = rand() % 200 + 1;
		cout << arr[i] << " ";
	}
	result = proizvedenie(arr);
	cout << endl<<result;
	/*2.Если есть в матрице столбец, все элементы которого отрицательны, то найти среднее
	  арифметическое этих элементов.Вычесть полученное значение из всех элементов матрицы.*/
	int n, m,sredneeZnachenie=0;
	cout << "Введите число тсрок\n";
	cin >> n;
	cout << "Введите число столбцов\n";
	cin >> m;
	int** mas = new int* [n];
	for (int i = 0; i < n; i++)
		mas[i] = new int[m];
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			mas[i][j] = rand() % 20-15 ;
			cout << mas[i][j] << "  ";
		}
		cout << endl;
	}
	sredneeZnachenie=sredArifm(mas, n, m);
	cout << sredneeZnachenie << endl;
	if (sredneeZnachenie != 0)
		for (int i = 0; i < n; i++)
			for (int j = 0; j < m; j++)
				mas[i][j] -= sredneeZnachenie;
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
			cout << mas[i][j] << " ";
		cout << endl;
	}

	for (int i = 0; i < n; i++)
		delete mas[i];
	delete[]mas;
	


}
int proizvedenie(int* arr)
{
	int result=1;
	for (int i = 2; i < 7; i++)
		result *= arr[i];
	return result;
}
int sredArifm(int** mas, const int n, const int m)
{
	int count = 0,id=0,srZhach=0;
	for(int j=0;j<m;j++)
		for (int i = 0; i < n; i++)
		{
			if (mas[i][j] < 0)
			{
				count++;
			}
			if (i == n - 1)
			{
				if (count == n)
				{
					id = j;
					count = 0;
				}
				else count = 0;
			}
		}
	cout << "id ==" << id << endl;
	if (id != 0)
	{
		for (int i = 0; i < n; i++)
			srZhach += mas[i][id];
		srZhach /= n;
		cout << "srZnach==" << srZhach << endl;
		return srZhach;
	}
	else {
		cout << "таких столбцов нет" << endl;
		return 0;
	}
}

